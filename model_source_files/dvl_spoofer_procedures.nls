;; code for simulating dvl spoofer nodes
;; the nodes have an influence radius, inside which a uuv's position-fix is displaced in the influence-heading direction by influence-strength amount

breed [spoofers spoofer]

spoofers-own [
  influence-radius
  influence-heading
  influence-strength
  target-strength-coefficient
]

globals [
  spoofer-count
  spoofer-radius
  spoofer-heading
  spoofer-strength
]


to deploy-spoofers
  create-spoofers spoofer-count [ 
   setxy (2 * (spoofer-strength / patch-dim + 5) + (random-xcor - (spoofer-strength / patch-dim + 5))) (2 * (spoofer-strength / patch-dim + 5) + (random-ycor - (spoofer-strength / patch-dim + 5))) ; keep uuv from being pushed off the edge
   set influence-radius spoofer-radius / patch-dim
   set influence-heading spoofer-heading
   set influence-strength spoofer-strength / patch-dim
    set color blue
  ]
  
end

to spoof-dvl
  ask spoofers [
    let offset-heading influence-heading  ; create local variables to pass to fix
    let offset-dist influence-strength
    ask uuvs in-radius influence-radius [
      ask first [end1] of my-fix-links [
        hatch 1
        setxy (xcor + ((sin offset-heading) * offset-dist)) (ycor + ((cos offset-heading) * offset-dist))  ; displace the nav fix by influence-strength units
      ]
    ]
  ]
end
